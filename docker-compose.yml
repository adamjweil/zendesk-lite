version: '3'
services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=langfuse
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    user: clickhouse
    environment:
      - CLICKHOUSE_DB=langfuse
    ports:
      - "18123:8123"
      - "19000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
      - ./users.xml:/etc/clickhouse-server/users.d/users.xml
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 60s
    command: bash -c "clickhouse-server --config-file=/etc/clickhouse-server/config.xml"

  langfuse:
    image: ghcr.io/langfuse/langfuse:latest
    ports:
      - "3001:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/langfuse
      - NEXTAUTH_SECRET=your-secret-key
      - SALT=your-salt
      - NEXT_PUBLIC_SIGN_UP_DISABLED=false
      - POSTGRES_PRISMA_URL=postgresql://postgres:postgres@postgres:5432/langfuse
      - POSTGRES_URL_NON_POOLING=postgresql://postgres:postgres@postgres:5432/langfuse
      - AUTH_GITHUB_ID=dummy
      - AUTH_GITHUB_SECRET=dummy
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_PASSWORD=langfuse
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_DATABASE=langfuse
      - CLICKHOUSE_URL=http://clickhouse:8123
      - CLICKHOUSE_MIGRATION_URL=clickhouse://clickhouse:9000?database=default&username=default&password=langfuse
      - CLICKHOUSE_PROTOCOL=native
      - CLICKHOUSE_TLS=false
      - CLICKHOUSE_CLUSTER_ENABLED=false
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    restart: unless-stopped

volumes:
  clickhouse_data:
  clickhouse_logs: 